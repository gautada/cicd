---
name: ci-docker-clean
# This action is ment to clean up all the old docker tags base on build #

on:
  workflow_call:
    inputs:
      registry_name:
        description: "Registry to publish images"
        type: string
        required: false
        default: "docker.io"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  ci:
    name: "Clean"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      #
      # - name: Install tools
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y jq
      #     # skope

      - name: "Clean Excess Tags"
        # yamllint disable rule:line-length
        run: |
          NS="${{ secrets.REGISTRY_USERNAME }}"
          REPO="$(pwd | awk -F'/' '{print $NF}')"
          _PASSWORD="${{ secrets.REGISTRY_TOKEN }}"
          # Build JSON payload without crazy escaping
          LOGIN_PAYLOAD="$(jq -nc --arg username "${NS}" --arg password "${_PASSWORD}" \
           '{username:$username, password:$password}')"

          TOKEN="$(curl -sS -H 'Content-Type: application/json' -X POST \
            -d "$LOGIN_PAYLOAD" https://hub.docker.com/v2/users/login/ | jq -r .token)"

          # Pull tags (auth header helps with rate limits and private repos)
          list_tags() {
            local url="https://hub.docker.com/v2/namespaces/${NS}/repositories/${REPO}/tags?page_size=100"
            while [ -n "$url" ] && [ "$url" != "null" ]; do
              page="$(curl -sS -H "Authorization: JWT $TOKEN" "$url")"
              echo "$page"
              url="$(echo "$page" | jq -r '.next')"
            done
          }

          delete_tags() {
            echo "${1}" | while IFS= read -r TAG; do
              echo "Deleting: ${NS}/${REPO}:${TAG}"
              if curl -fsS -X DELETE -H "Authorization: JWT ${TOKEN}" \
                      "https://hub.docker.com/v2/namespaces/${NS}/repositories/${REPO}/tags/${TAG}/" \
                      -o /dev/null; then
                echo "  ✔ deleted"
              else
                echo "  ✖ failed"
              fi
            done
          }

          filtered_tags="$(list_tags | jq -r '.results[]?.name | select(test("^build-(?:amd64|arm64)-[[:xdigit:]]{7}$"))')"
          delete_tags "${filtered_tags}"
        # yamllint enable rule:line-length
