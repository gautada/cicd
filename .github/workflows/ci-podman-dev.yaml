---
name: ci-podman-dev
# Pulls together the manifest and pushes the dev tagged image to registry

on:
  workflow_call:
    inputs:
      architectures:
        description: "List of architectures"
        type: string
        required: true
      registry_name:
        description: "Registry to publish images"
        type: string
        required: false
        default: "docker.io"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  ci:
    name: "Collect Manifest(dev)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Registry Login(${{ inputs.registry_name }})
        run: |
          echo "${{ secrets.REGISTRY_TOKEN }}" | /usr/bin/podman login \
            --username "${{ secrets.REGISTRY_USERNAME }}" \
            --password-stdin ${{ inputs.registry_name }}

      - name: Build and Publish Manifest(dev)
        # yamllint disable rule:line-length
        run: |
          set -x
          TAG="${{ inputs.registry_name }}/${{ secrets.REGISTRY_USERNAME }}/"
          TAG="${TAG}$(pwd | awk -F'/' '{print $NF}'):"
          MANIFEST="${TAG}dev"
          /usr/bin/podman manifest create "${MANIFEST}"
          # while IFS= read -r architecture; do
          # yamllint disable rule:line-length
          for architecture in $(echo '${{ inputs.architectures }}' | jq -r '.[]'); do # yamllint disable-line
           # yamllint enable rule:line-length
           # echo "Process ${architecture}"
           PART="${TAG}build-${architecture}-"
           PART="${PART}$(/usr/bin/git rev-parse --short HEAD)"
           DEV="${TAG}dev-${architecture}"
           /usr/bin/podman pull "${PART}"
           /usr/bin/podman tag "${PART}" "${DEV}"
           /usr/bin/podman push "${DEV}"
           /usr/bin/podman manifest add "${MANIFEST}" "${DEV}"
          done # <<< "${{ inputs.architectures }}"
          /usr/bin/podman manifest push "${MANIFEST}"
        # yamllint enable rule:line-length
