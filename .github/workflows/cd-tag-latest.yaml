---
name: cd-tag-latest
# Tags the dev image to latest and __IMAGE_VERSION__

on:
  workflow_call:
    inputs:
      registry_name:
        description: "Registry to publish images"
        type: string
        required: false
        default: "docker.io"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  cd:
    name: "Retag Image(dev->latest)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        uses: actions/checkout@v4

      - name: Registry Login(${{ inputs.registry_name }})
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          echo "${{ secrets.REGISTRY_TOKEN }}" | /usr/bin/podman login \
            --username "${{ secrets.REGISTRY_USERNAME }}" \
            --password-stdin ${{ inputs.registry_name }}

      - name: Pull the (dev)Image
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          set -x
          CONTAINER="${{ inputs.registry_name }}"
          CONTAINER+="/${{ secrets.REGISTRY_USERNAME }}"
          CONTAINER+="/$(pwd | awk -F'/' '{print $NF}')"
          MANIFEST="${CONTAINER}:dev"
          /usr/bin/podman pull "${MANIFEST}-amd64"
          # /usr/bin/podman tag "${MANIFEST}-amd64" "${MANIFEST}-latest-amd64"
          /usr/bin/podman pull "${MANIFEST}-arm64"
          # /usr/bin/podman tag "${MANIFEST}-arm64" "${MANIFEST}-latest-arm64"
          LATEST="${CONTAINER}:latest"
          /usr/bin/podman manifest create "${LATEST}" \
                   "${MANIFEST}-amd64"  "${MANIFEST}-arm64"
          # /usr/bin/podman manifest add "${LATEST}" "${MANIFEST}-amd64"
          # /usr/bin/podman manifest add "${LATEST}" "${MANIFEST}-arm64"
          VERSION="${CONTAINER}$(grep '^IMAGE_VERSION=' .args | cut -d= -f2-)"
          /usr/bin/podman tag "${LATEST}" "${VERSION}"
          /usr/bin/podman manifest push "${LATEST}"
          /usr/bin/podman manifest push "${VERSION}"


      - name: Test the (dev)Image
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          set -x
          # TAG="${{ inputs.registry_name }}/${{ secrets.REGISTRY_USERNAME }}/"
          # TAG="${TAG}$(pwd | awk -F'/' '{print $NF}'):"
          # MANIFEST="${TAG}dev"
          echo "TODO: TEST the dev Image"


      - name: Tag the latest Image
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          set -x
          echo "Deploy"
